--- mapproject.c.orig	2008-09-10 18:10:49.000000000 -0800
+++ mapproject.c	2008-09-14 13:13:12.000000000 -0800
@@ -195,14 +195,13 @@
 #endif /* def USE_PROJ */
 
 /************************************************************************/
-/*                           msProjectRect()                            */
+/*                           msProjectRectInner()                       */
 /************************************************************************/
 
 #define NUMBER_OF_SAMPLE_POINTS 100
 
-int msProjectRect(projectionObj *in, projectionObj *out, rectObj *rect) 
+int msProjectRectInner(projectionObj *in, projectionObj *out, rectObj *rect) 
 {
-#ifdef USE_PROJ
   pointObj prj_point;
   rectObj prj_rect;
   int	  rect_initialized = MS_FALSE, failure=0;
@@ -288,7 +287,7 @@
       if( !rect_initialized )
       {
           if( out == NULL || out->proj == NULL 
-              || pj_is_latlong(in->proj) )
+              || pj_is_latlong(out->proj) )
           {
               prj_rect.minx = -180;
               prj_rect.maxx = 180;
@@ -303,11 +302,11 @@
               prj_rect.maxy = 11000000;
           }
 
-          msDebug( "msProjectRect(): all points failed to reproject, trying to fall back to using world bounds ... hope this helps.\n" );
+          msDebug( "msProjectRectInner(): all points failed to reproject, trying to fall back to using world bounds ... hope this helps.\n" );
       }
       else
       {
-          msDebug( "msProjectRect(): some points failed to reproject, doing internal sampling.\n" );
+          msDebug( "msProjectRectInner(): some points failed to reproject, doing internal sampling.\n" );
       }
   }
 
@@ -320,6 +319,55 @@
       return MS_FAILURE;
   else
       return(MS_SUCCESS);
+}
+
+/************************************************************************/
+/*                           msProjectRect()                       */
+/************************************************************************/
+int msProjectRect(projectionObj *in, projectionObj *out, rectObj *rect)
+{
+#ifdef USE_PROJ
+  rectObj origRect = *rect, newRect;
+  double dx = (rect->maxx - rect->minx)/NUMBER_OF_SAMPLE_POINTS;
+  double dy = (rect->maxy - rect->miny)/NUMBER_OF_SAMPLE_POINTS;
+
+/* -------------------------------------------------------------------- */
+/*      Project rectangle and then repeat for an interior rectangle.    */
+/*      If the latter results in a more extreme y extent, then extend   */
+/*      bounds to southern/northing extremes and entire x extent.       */
+/* -------------------------------------------------------------------- */
+  if (msProjectRectInner(in, out, rect) == MS_SUCCESS) {
+      newRect = *rect;
+      rect->minx = origRect.minx + dx;
+      rect->miny = origRect.miny + dy;
+      rect->maxx = origRect.maxx - dx;
+      rect->maxy = origRect.maxy - dy;
+      if (msProjectRectInner(in, out, rect) == MS_SUCCESS) {
+          if (rect->miny < newRect.miny || rect->maxy > newRect.maxy) {
+              msDebug( "msProjectRect(): extending bounds.\n" );
+              newRect.minx = -22000000;
+              newRect.maxx = 22000000;
+              if (out == NULL || out->proj == NULL || pj_is_latlong(out->proj)) {
+                  newRect.minx = -180;
+                  newRect.maxx = 180;
+              }
+              if (rect->miny < newRect.miny) {
+                  newRect.miny = -11000000;
+                  if (out == NULL || out->proj == NULL || pj_is_latlong(out->proj))
+                      newRect.miny = -90;
+              }
+              if (rect->maxy > newRect.maxy) {
+                  newRect.maxy = 11000000;
+                  if (out == NULL || out->proj == NULL || pj_is_latlong(out->proj))
+                      newRect.maxy = 90;
+              }
+          }
+      }
+      *rect = newRect;
+      return(MS_SUCCESS);
+  } else {
+    return(MS_FAILURE);
+  }
 #else
   msSetError(MS_PROJERR, "Projection support is not available.", "msProjectRect()");
   return(MS_FAILURE);
--- mapresample.c.orig	2008-09-10 18:11:03.000000000 -0800
+++ mapresample.c	2008-11-24 15:51:23.000000000 -0900
@@ -1374,13 +1374,47 @@
 /* -------------------------------------------------------------------- */
     if( CSLFetchBoolean( layer->processing, "LOAD_WHOLE_IMAGE", FALSE ) )
         bSuccess = FALSE;
-    else
+    else {
         bSuccess = 
             msTransformMapToSource( nDstXSize, nDstYSize, adfDstGeoTransform,
                                     &(map->projection),
                                     nSrcXSize, nSrcYSize,adfInvSrcGeoTransform,
                                     &(layer->projection),
                                     &sSrcExtent, FALSE );
+        if (bSuccess) {
+/* -------------------------------------------------------------------- */
+/*      Repeat transformation for a rectangle interior to the output    */
+/*      requested region.  If the latter results in a more extreme y    */
+/*      extent, then extend extents in source layer projection to       */
+/*      southern/northing bounds and entire x extent.                   */
+/* -------------------------------------------------------------------- */
+            memcpy( &sOrigSrcExtent, &sSrcExtent, sizeof(sSrcExtent) );
+            adfDstGeoTransform[0] = adfDstGeoTransform[0] + adfDstGeoTransform[1];
+            adfDstGeoTransform[3] = adfDstGeoTransform[3] + adfDstGeoTransform[5];
+            bSuccess =
+                msTransformMapToSource( nDstXSize-2, nDstYSize-2, adfDstGeoTransform,
+                                        &(map->projection),
+                                        nSrcXSize, nSrcYSize,adfInvSrcGeoTransform,
+                                        &(layer->projection),
+                                        &sSrcExtent, FALSE );
+            /* Reset this array to its original value! */
+            memcpy( adfDstGeoTransform, map->gt.geotransform, sizeof(double)*6 );
+
+            if (bSuccess) {
+                if (sSrcExtent.maxy > sOrigSrcExtent.maxy || sSrcExtent.miny < sOrigSrcExtent.miny) {
+                    msDebug( "msTransformMapToSource(): extending bounds.\n");
+                    sOrigSrcExtent.minx = 0;
+                    sOrigSrcExtent.maxx = nSrcXSize;
+                    if (sSrcExtent.maxy > sOrigSrcExtent.maxy)
+                        sOrigSrcExtent.maxy = nSrcYSize;
+                    if (sSrcExtent.miny < sOrigSrcExtent.miny)
+                        sOrigSrcExtent.miny = 0;
+                }
+            }
+            memcpy( &sSrcExtent, &sOrigSrcExtent, sizeof(sOrigSrcExtent) );
+            bSuccess = TRUE;
+        }
+    }
 
 /* -------------------------------------------------------------------- */
 /*      If the transformation failed, it is likely that we have such    */
